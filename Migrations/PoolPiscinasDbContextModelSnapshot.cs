// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoolPiscinas.Models;

namespace PoolPiscinas.Migrations
{
    [DbContext(typeof(PoolPiscinasDbContext))]
    partial class PoolPiscinasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("PoolPiscinas.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Agenda", b =>
                {
                    b.Property<int>("AgendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("AgendaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<int>("PiscineiroID")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ClienteID");

                    b.HasIndex("PiscineiroID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Conta", b =>
                {
                    b.Property<int>("ContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("Pagar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Receber")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ContaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Documentos", b =>
                {
                    b.Property<int>("DocumentosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Base64Arquivo")
                        .HasColumnType("longtext");

                    b.Property<int>("ContaID")
                        .HasColumnType("int");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.HasKey("DocumentosID");

                    b.HasIndex("ContaID");

                    b.HasIndex("OrdemServicoID");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Franqueado", b =>
                {
                    b.Property<int>("FranqueadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FranquiaID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("FranqueadoID");

                    b.HasIndex("FranquiaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Franqueados");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Franquia", b =>
                {
                    b.Property<int>("FranquiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("FranquiaID");

                    b.ToTable("Franquias");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("MaterialID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("PoolPiscinas.Models.OrdemServico", b =>
                {
                    b.Property<int>("OrdemServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AgendaID")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("OrdemServicoID");

                    b.HasIndex("AgendaID");

                    b.HasIndex("ClienteID");

                    b.ToTable("OrdemServicos");
                });

            modelBuilder.Entity("PoolPiscinas.Models.OrdemServicoMaterial", b =>
                {
                    b.Property<int>("OrdemServicoMaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.HasKey("OrdemServicoMaterialID");

                    b.HasIndex("OrdemServicoID");

                    b.ToTable("OrdemServicoMateriais");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Piscineiro", b =>
                {
                    b.Property<int>("PiscineiroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PiscineiroID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Piscineiros");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioID");

                    b.HasIndex("RoleID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Admin", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Agenda", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Cliente", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Piscineiro", "Piscineiro")
                        .WithMany()
                        .HasForeignKey("PiscineiroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piscineiro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Conta", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Documentos", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolPiscinas.Models.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Franqueado", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Franquia", "Franquia")
                        .WithMany()
                        .HasForeignKey("FranquiaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franquia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.OrdemServico", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Agenda", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolPiscinas.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PoolPiscinas.Models.OrdemServicoMaterial", b =>
                {
                    b.HasOne("PoolPiscinas.Models.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Piscineiro", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PoolPiscinas.Models.Usuario", b =>
                {
                    b.HasOne("PoolPiscinas.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
